package ru.rdtex.mvd.weapon.model.vo;

import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;

import ru.rdtex.mvd.weapon.global.JSFUtils;
import ru.rdtex.mvd.weapon.model.en.DocDocumentsImpl;
import ru.rdtex.mvd.weapon.model.en.DocRelationsImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Aug 10 14:58:45 MSD 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class DocDocumentsViewRowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Id {
            public Object get(DocDocumentsViewRowImpl obj) {
                return obj.getId();
            }

            public void put(DocDocumentsViewRowImpl obj, Object value) {
                obj.setId((Number)value);
            }
        }
        ,
        State {
            public Object get(DocDocumentsViewRowImpl obj) {
                return obj.getState();
            }

            public void put(DocDocumentsViewRowImpl obj, Object value) {
                obj.setState((Number)value);
            }
        }
        ,
        Inserted {
            public Object get(DocDocumentsViewRowImpl obj) {
                return obj.getInserted();
            }

            public void put(DocDocumentsViewRowImpl obj, Object value) {
                obj.setInserted((Date)value);
            }
        }
        ,
        InsertedBy {
            public Object get(DocDocumentsViewRowImpl obj) {
                return obj.getInsertedBy();
            }

            public void put(DocDocumentsViewRowImpl obj, Object value) {
                obj.setInsertedBy((Number)value);
            }
        }
        ,
        Updated {
            public Object get(DocDocumentsViewRowImpl obj) {
                return obj.getUpdated();
            }

            public void put(DocDocumentsViewRowImpl obj, Object value) {
                obj.setUpdated((Date)value);
            }
        }
        ,
        UpdatedBy {
            public Object get(DocDocumentsViewRowImpl obj) {
                return obj.getUpdatedBy();
            }

            public void put(DocDocumentsViewRowImpl obj, Object value) {
                obj.setUpdatedBy((Number)value);
            }
        }
        ,
        DocName {
            public Object get(DocDocumentsViewRowImpl obj) {
                return obj.getDocName();
            }

            public void put(DocDocumentsViewRowImpl obj, Object value) {
                obj.setDocName((String)value);
            }
        }
        ,
        DocNumb {
            public Object get(DocDocumentsViewRowImpl obj) {
                return obj.getDocNumb();
            }

            public void put(DocDocumentsViewRowImpl obj, Object value) {
                obj.setDocNumb((String)value);
            }
        }
        ,
        DocSeries {
            public Object get(DocDocumentsViewRowImpl obj) {
                return obj.getDocSeries();
            }

            public void put(DocDocumentsViewRowImpl obj, Object value) {
                obj.setDocSeries((String)value);
            }
        }
        ,
        DocDate {
            public Object get(DocDocumentsViewRowImpl obj) {
                return obj.getDocDate();
            }

            public void put(DocDocumentsViewRowImpl obj, Object value) {
                obj.setDocDate((Date)value);
            }
        }
        ,
        DdcId {
            public Object get(DocDocumentsViewRowImpl obj) {
                return obj.getDdcId();
            }

            public void put(DocDocumentsViewRowImpl obj, Object value) {
                obj.setDdcId((Number)value);
            }
        }
        ,
        Department {
            public Object get(DocDocumentsViewRowImpl obj) {
                return obj.getDepartment();
            }

            public void put(DocDocumentsViewRowImpl obj, Object value) {
                obj.setDepartment((String)value);
            }
        }
        ,
        DocType {
            public Object get(DocDocumentsViewRowImpl obj) {
                return obj.getDocType();
            }

            public void put(DocDocumentsViewRowImpl obj, Object value) {
                obj.setDocType((Number)value);
            }
        }
        ,
        Comments {
            public Object get(DocDocumentsViewRowImpl obj) {
                return obj.getComments();
            }

            public void put(DocDocumentsViewRowImpl obj, Object value) {
                obj.setComments((String)value);
            }
        }
        ,
        UpdatedFlag {
            public Object get(DocDocumentsViewRowImpl obj) {
                return obj.getUpdatedFlag();
            }

            public void put(DocDocumentsViewRowImpl obj, Object value) {
                obj.setUpdatedFlag((Number)value);
            }
        }
        ,
        FlagVb {
            public Object get(DocDocumentsViewRowImpl obj) {
                return obj.getFlagVb();
            }

            public void put(DocDocumentsViewRowImpl obj, Object value) {
                obj.setFlagVb((Number)value);
            }
        }
        ,
        FlagSv {
            public Object get(DocDocumentsViewRowImpl obj) {
                return obj.getFlagSv();
            }

            public void put(DocDocumentsViewRowImpl obj, Object value) {
                obj.setFlagSv((Number)value);
            }
        }
        ,
        Wh {
            public Object get(DocDocumentsViewRowImpl obj) {
                return obj.getWh();
            }

            public void put(DocDocumentsViewRowImpl obj, Object value) {
                obj.setWh((String)value);
            }
        }
        ,
        EpId {
            public Object get(DocDocumentsViewRowImpl obj) {
                return obj.getEpId();
            }

            public void put(DocDocumentsViewRowImpl obj, Object value) {
                obj.setEpId((Number)value);
            }
        }
        ,
        ObjLow {
            public Object get(DocDocumentsViewRowImpl obj) {
                return obj.getObjLow();
            }

            public void put(DocDocumentsViewRowImpl obj, Object value) {
                obj.setObjLow((String)value);
            }
        }
        ,
        HashValue {
            public Object get(DocDocumentsViewRowImpl obj) {
                return obj.getHashValue();
            }

            public void put(DocDocumentsViewRowImpl obj, Object value) {
                obj.setHashValue((Number)value);
            }
        }
        ,
        OldStatus {
            public Object get(DocDocumentsViewRowImpl obj) {
                return obj.getOldStatus();
            }

            public void put(DocDocumentsViewRowImpl obj, Object value) {
                obj.setOldStatus((Number)value);
            }
        }
        ,
        CompareStatus {
            public Object get(DocDocumentsViewRowImpl obj) {
                return obj.getCompareStatus();
            }

            public void put(DocDocumentsViewRowImpl obj, Object value) {
                obj.setCompareStatus((Number)value);
            }
        }
        ,
        CompareDate {
            public Object get(DocDocumentsViewRowImpl obj) {
                return obj.getCompareDate();
            }

            public void put(DocDocumentsViewRowImpl obj, Object value) {
                obj.setCompareDate((Date)value);
            }
        }
        ,
        ObjId {
            public Object get(DocDocumentsViewRowImpl obj) {
                return obj.getObjId();
            }

            public void put(DocDocumentsViewRowImpl obj, Object value) {
                obj.setObjId((Number)value);
            }
        }
        ,
        PersonId {
            public Object get(DocDocumentsViewRowImpl obj) {
                return obj.getPersonId();
            }

            public void put(DocDocumentsViewRowImpl obj, Object value) {
                obj.setPersonId((Number)value);
            }
        }
        ,
        DocDocumentsView {
            public Object get(DocDocumentsViewRowImpl obj) {
                return obj.getDocDocumentsView();
            }

            public void put(DocDocumentsViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        DocDocumentsDocRelationsView {
            public Object get(DocDocumentsViewRowImpl obj) {
                return obj.getDocDocumentsDocRelationsView();
            }

            public void put(DocDocumentsViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        DocPermissionsView {
            public Object get(DocDocumentsViewRowImpl obj) {
                return obj.getDocPermissionsView();
            }

            public void put(DocDocumentsViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        DocRequestsView {
            public Object get(DocDocumentsViewRowImpl obj) {
                return obj.getDocRequestsView();
            }

            public void put(DocDocumentsViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        DocDocumentsView1 {
            public Object get(DocDocumentsViewRowImpl obj) {
                return obj.getDocDocumentsView1();
            }

            public void put(DocDocumentsViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        CgRefCodesView1 {
            public Object get(DocDocumentsViewRowImpl obj) {
                return obj.getCgRefCodesView1();
            }

            public void put(DocDocumentsViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        DocDocumentsRelationsView1 {
            public Object get(DocDocumentsViewRowImpl obj) {
                return obj.getDocDocumentsRelationsView1();
            }

            public void put(DocDocumentsViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(DocDocumentsViewRowImpl object);

        public abstract void put(DocDocumentsViewRowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ID = AttributesEnum.Id.index();
    public static final int STATE = AttributesEnum.State.index();
    public static final int INSERTED = AttributesEnum.Inserted.index();
    public static final int INSERTEDBY = AttributesEnum.InsertedBy.index();
    public static final int UPDATED = AttributesEnum.Updated.index();
    public static final int UPDATEDBY = AttributesEnum.UpdatedBy.index();
    public static final int DOCNAME = AttributesEnum.DocName.index();
    public static final int DOCNUMB = AttributesEnum.DocNumb.index();
    public static final int DOCSERIES = AttributesEnum.DocSeries.index();
    public static final int DOCDATE = AttributesEnum.DocDate.index();
    public static final int DDCID = AttributesEnum.DdcId.index();
    public static final int DEPARTMENT = AttributesEnum.Department.index();
    public static final int DOCTYPE = AttributesEnum.DocType.index();
    public static final int COMMENTS = AttributesEnum.Comments.index();
    public static final int UPDATEDFLAG = AttributesEnum.UpdatedFlag.index();
    public static final int FLAGVB = AttributesEnum.FlagVb.index();
    public static final int FLAGSV = AttributesEnum.FlagSv.index();
    public static final int WH = AttributesEnum.Wh.index();
    public static final int EPID = AttributesEnum.EpId.index();
    public static final int OBJLOW = AttributesEnum.ObjLow.index();
    public static final int HASHVALUE = AttributesEnum.HashValue.index();
    public static final int OLDSTATUS = AttributesEnum.OldStatus.index();
    public static final int COMPARESTATUS = AttributesEnum.CompareStatus.index();
    public static final int COMPAREDATE = AttributesEnum.CompareDate.index();
    public static final int OBJID = AttributesEnum.ObjId.index();
    public static final int PERSONID = AttributesEnum.PersonId.index();
    public static final int DOCDOCUMENTSVIEW = AttributesEnum.DocDocumentsView.index();
    public static final int DOCDOCUMENTSDOCRELATIONSVIEW = AttributesEnum.DocDocumentsDocRelationsView.index();
    public static final int DOCPERMISSIONSVIEW = AttributesEnum.DocPermissionsView.index();
    public static final int DOCREQUESTSVIEW = AttributesEnum.DocRequestsView.index();
    public static final int DOCDOCUMENTSVIEW1 = AttributesEnum.DocDocumentsView1.index();
    public static final int CGREFCODESVIEW1 = AttributesEnum.CgRefCodesView1.index();
    public static final int DOCDOCUMENTSRELATIONSVIEW1 = AttributesEnum.DocDocumentsRelationsView1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public DocDocumentsViewRowImpl() {
    }

    /**
     * Gets DocDocuments entity object.
     * @return the DocDocuments
     */
    public DocDocumentsImpl getDocDocuments() {
        return (DocDocumentsImpl)getEntity(0);
    }


    /**
     * Gets the attribute value for ID using the alias name Id.
     * @return the ID
     */
    public Number getId() {
        return (Number) getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as attribute value for ID using the alias name Id.
     * @param value value to set the ID
     */
    public void setId(Number value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for STATE using the alias name State.
     * @return the STATE
     */
    public Number getState() {
        return (Number) getAttributeInternal(STATE);
    }

    /**
     * Sets <code>value</code> as attribute value for STATE using the alias name State.
     * @param value value to set the STATE
     */
    public void setState(Number value) {
        setAttributeInternal(STATE, value);
    }

    /**
     * Gets the attribute value for INSERTED using the alias name Inserted.
     * @return the INSERTED
     */
    public Date getInserted() {
        return (Date) getAttributeInternal(INSERTED);
    }

    /**
     * Sets <code>value</code> as attribute value for INSERTED using the alias name Inserted.
     * @param value value to set the INSERTED
     */
    public void setInserted(Date value) {
        setAttributeInternal(INSERTED, value);
    }

    /**
     * Gets the attribute value for INSERTED_BY using the alias name InsertedBy.
     * @return the INSERTED_BY
     */
    public Number getInsertedBy() {
        return (Number) getAttributeInternal(INSERTEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for INSERTED_BY using the alias name InsertedBy.
     * @param value value to set the INSERTED_BY
     */
    public void setInsertedBy(Number value) {
        setAttributeInternal(INSERTEDBY, value);
    }

    /**
     * Gets the attribute value for UPDATED using the alias name Updated.
     * @return the UPDATED
     */
    public Date getUpdated() {
        return (Date) getAttributeInternal(UPDATED);
    }

    /**
     * Sets <code>value</code> as attribute value for UPDATED using the alias name Updated.
     * @param value value to set the UPDATED
     */
    public void setUpdated(Date value) {
        setAttributeInternal(UPDATED, value);
    }

    /**
     * Gets the attribute value for UPDATED_BY using the alias name UpdatedBy.
     * @return the UPDATED_BY
     */
    public Number getUpdatedBy() {
        return (Number) getAttributeInternal(UPDATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for UPDATED_BY using the alias name UpdatedBy.
     * @param value value to set the UPDATED_BY
     */
    public void setUpdatedBy(Number value) {
        setAttributeInternal(UPDATEDBY, value);
    }

    /**
     * Gets the attribute value for DOC_NAME using the alias name DocName.
     * @return the DOC_NAME
     */
    public String getDocName() {
        return (String) getAttributeInternal(DOCNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_NAME using the alias name DocName.
     * @param value value to set the DOC_NAME
     */
    public void setDocName(String value) {
        setAttributeInternal(DOCNAME, value);
    }

    /**
     * Gets the attribute value for DOC_NUMB using the alias name DocNumb.
     * @return the DOC_NUMB
     */
    public String getDocNumb() {
        return (String) getAttributeInternal(DOCNUMB);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_NUMB using the alias name DocNumb.
     * @param value value to set the DOC_NUMB
     */
    public void setDocNumb(String value) {
        setAttributeInternal(DOCNUMB, value);
    }

    /**
     * Gets the attribute value for DOC_SERIES using the alias name DocSeries.
     * @return the DOC_SERIES
     */
    public String getDocSeries() {
        return (String) getAttributeInternal(DOCSERIES);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_SERIES using the alias name DocSeries.
     * @param value value to set the DOC_SERIES
     */
    public void setDocSeries(String value) {
        setAttributeInternal(DOCSERIES, value);
    }

    /**
     * Gets the attribute value for DOC_DATE using the alias name DocDate.
     * @return the DOC_DATE
     */
    public Date getDocDate() {
        return (Date) getAttributeInternal(DOCDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_DATE using the alias name DocDate.
     * @param value value to set the DOC_DATE
     */
    public void setDocDate(Date value) {
        setAttributeInternal(DOCDATE, value);
    }

    /**
     * Gets the attribute value for DDC_ID using the alias name DdcId.
     * @return the DDC_ID
     */
    public Number getDdcId() {
        return (Number) getAttributeInternal(DDCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DDC_ID using the alias name DdcId.
     * @param value value to set the DDC_ID
     */
    public void setDdcId(Number value) {
        setAttributeInternal(DDCID, value);
    }

    /**
     * Gets the attribute value for DEPARTMENT using the alias name Department.
     * @return the DEPARTMENT
     */
    public String getDepartment() {
        return (String) getAttributeInternal(DEPARTMENT);
    }

    /**
     * Sets <code>value</code> as attribute value for DEPARTMENT using the alias name Department.
     * @param value value to set the DEPARTMENT
     */
    public void setDepartment(String value) {
        setAttributeInternal(DEPARTMENT, value);
    }

    /**
     * Gets the attribute value for DOC_TYPE using the alias name DocType.
     * @return the DOC_TYPE
     */
    public Number getDocType() {
        return (Number) getAttributeInternal(DOCTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_TYPE using the alias name DocType.
     * @param value value to set the DOC_TYPE
     */
    public void setDocType(Number value) {
        setAttributeInternal(DOCTYPE, value);
    }

    /**
     * Gets the attribute value for COMMENTS using the alias name Comments.
     * @return the COMMENTS
     */
    public String getComments() {
        return (String) getAttributeInternal(COMMENTS);
    }

    /**
     * Sets <code>value</code> as attribute value for COMMENTS using the alias name Comments.
     * @param value value to set the COMMENTS
     */
    public void setComments(String value) {
        setAttributeInternal(COMMENTS, value);
    }

    /**
     * Gets the attribute value for UPDATED_FLAG using the alias name UpdatedFlag.
     * @return the UPDATED_FLAG
     */
    public Number getUpdatedFlag() {
        return (Number) getAttributeInternal(UPDATEDFLAG);
    }

    /**
     * Sets <code>value</code> as attribute value for UPDATED_FLAG using the alias name UpdatedFlag.
     * @param value value to set the UPDATED_FLAG
     */
    public void setUpdatedFlag(Number value) {
        setAttributeInternal(UPDATEDFLAG, value);
    }

    /**
     * Gets the attribute value for FLAG_VB using the alias name FlagVb.
     * @return the FLAG_VB
     */
    public Number getFlagVb() {
        return (Number) getAttributeInternal(FLAGVB);
    }

    /**
     * Sets <code>value</code> as attribute value for FLAG_VB using the alias name FlagVb.
     * @param value value to set the FLAG_VB
     */
    public void setFlagVb(Number value) {
        setAttributeInternal(FLAGVB, value);
    }

    /**
     * Gets the attribute value for FLAG_SV using the alias name FlagSv.
     * @return the FLAG_SV
     */
    public Number getFlagSv() {
        return (Number) getAttributeInternal(FLAGSV);
    }

    /**
     * Sets <code>value</code> as attribute value for FLAG_SV using the alias name FlagSv.
     * @param value value to set the FLAG_SV
     */
    public void setFlagSv(Number value) {
        setAttributeInternal(FLAGSV, value);
    }

    /**
     * Gets the attribute value for WH using the alias name Wh.
     * @return the WH
     */
    public String getWh() {
        return (String) getAttributeInternal(WH);
    }

    /**
     * Sets <code>value</code> as attribute value for WH using the alias name Wh.
     * @param value value to set the WH
     */
    public void setWh(String value) {
        setAttributeInternal(WH, value);
    }

    /**
     * Gets the attribute value for EP_ID using the alias name EpId.
     * @return the EP_ID
     */
    public Number getEpId() {
        return (Number) getAttributeInternal(EPID);
    }

    /**
     * Sets <code>value</code> as attribute value for EP_ID using the alias name EpId.
     * @param value value to set the EP_ID
     */
    public void setEpId(Number value) {
        setAttributeInternal(EPID, value);
    }

    /**
     * Gets the attribute value for OBJ_LOW using the alias name ObjLow.
     * @return the OBJ_LOW
     */
    public String getObjLow() {
        return (String) getAttributeInternal(OBJLOW);
    }

    /**
     * Sets <code>value</code> as attribute value for OBJ_LOW using the alias name ObjLow.
     * @param value value to set the OBJ_LOW
     */
    public void setObjLow(String value) {
        setAttributeInternal(OBJLOW, value);
    }

    /**
     * Gets the attribute value for HASH_VALUE using the alias name HashValue.
     * @return the HASH_VALUE
     */
    public Number getHashValue() {
        return (Number) getAttributeInternal(HASHVALUE);
    }

    /**
     * Sets <code>value</code> as attribute value for HASH_VALUE using the alias name HashValue.
     * @param value value to set the HASH_VALUE
     */
    public void setHashValue(Number value) {
        setAttributeInternal(HASHVALUE, value);
    }

    /**
     * Gets the attribute value for OLD_STATUS using the alias name OldStatus.
     * @return the OLD_STATUS
     */
    public Number getOldStatus() {
        return (Number) getAttributeInternal(OLDSTATUS);
    }

    /**
     * Sets <code>value</code> as attribute value for OLD_STATUS using the alias name OldStatus.
     * @param value value to set the OLD_STATUS
     */
    public void setOldStatus(Number value) {
        setAttributeInternal(OLDSTATUS, value);
    }

    /**
     * Gets the attribute value for COMPARE_STATUS using the alias name CompareStatus.
     * @return the COMPARE_STATUS
     */
    public Number getCompareStatus() {
        return (Number) getAttributeInternal(COMPARESTATUS);
    }

    /**
     * Sets <code>value</code> as attribute value for COMPARE_STATUS using the alias name CompareStatus.
     * @param value value to set the COMPARE_STATUS
     */
    public void setCompareStatus(Number value) {
        setAttributeInternal(COMPARESTATUS, value);
    }

    /**
     * Gets the attribute value for COMPARE_DATE using the alias name CompareDate.
     * @return the COMPARE_DATE
     */
    public Date getCompareDate() {
        return (Date) getAttributeInternal(COMPAREDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for COMPARE_DATE using the alias name CompareDate.
     * @param value value to set the COMPARE_DATE
     */
    public void setCompareDate(Date value) {
        setAttributeInternal(COMPAREDATE, value);
    }

    /**
     * Gets the attribute value for OBJ_ID using the alias name ObjId.
     * @return the OBJ_ID
     */
    public Number getObjId() {
        return (Number) getAttributeInternal(OBJID);
    }

    /**
     * Sets <code>value</code> as attribute value for OBJ_ID using the alias name ObjId.
     * @param value value to set the OBJ_ID
     */
    public void setObjId(Number value) {
        setAttributeInternal(OBJID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PersonId.
     * @return the PersonId
     */
    public Number getPersonId() {
        //return (Number) getAttributeInternal(PERSONID);
        return (Number)JSFUtils.resolveExpression("#{Myses.personId}"); 
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PersonId.
     * @param value value to set the  PersonId
     */
    public void setPersonId(Number value) {
        setAttributeInternal(PERSONID, value);
    }


    /**
     * Gets the associated <code>RowIterator</code> using master-detail link DocDocumentsView.
     */
    public RowIterator getDocDocumentsView() {
        return (RowIterator)getAttributeInternal(DOCDOCUMENTSVIEW);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link DocDocumentsDocRelationsView.
     */
    public RowIterator getDocDocumentsDocRelationsView() {
        return (RowIterator)getAttributeInternal(DOCDOCUMENTSDOCRELATIONSVIEW);
    }

    /**
     * Gets the associated <code>Row</code> using master-detail link DocPermissionsView.
     */
    public Row getDocPermissionsView() {
        return (Row)getAttributeInternal(DOCPERMISSIONSVIEW);
    }

    /**
     * Sets the master-detail link DocPermissionsView between this object and <code>value</code>.
     */
    public void setDocPermissionsView(Row value) {
        setAttributeInternal(DOCPERMISSIONSVIEW, value);
    }

    /**
     * Gets the associated <code>Row</code> using master-detail link DocRequestsView.
     */
    public Row getDocRequestsView() {
        return (Row)getAttributeInternal(DOCREQUESTSVIEW);
    }

    /**
     * Sets the master-detail link DocRequestsView between this object and <code>value</code>.
     */
    public void setDocRequestsView(Row value) {
        setAttributeInternal(DOCREQUESTSVIEW, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> DocDocumentsView1.
     */
    public RowSet getDocDocumentsView1() {
        return (RowSet)getAttributeInternal(DOCDOCUMENTSVIEW1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> CgRefCodesView1.
     */
    public RowSet getCgRefCodesView1() {
        return (RowSet)getAttributeInternal(CGREFCODESVIEW1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> DocDocumentsRelationsView1.
     */
    public RowSet getDocDocumentsRelationsView1() {
        return (RowSet)getAttributeInternal(DOCDOCUMENTSRELATIONSVIEW1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
