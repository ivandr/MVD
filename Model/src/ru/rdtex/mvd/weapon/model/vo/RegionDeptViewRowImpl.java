package ru.rdtex.mvd.weapon.model.vo;

import oracle.jbo.RowIterator;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Jul 31 15:07:32 MSD 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class RegionDeptViewRowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Code {
            public Object get(RegionDeptViewRowImpl obj) {
                return obj.getCode();
            }

            public void put(RegionDeptViewRowImpl obj, Object value) {
                obj.setCode((Number)value);
            }
        }
        ,
        Title {
            public Object get(RegionDeptViewRowImpl obj) {
                return obj.getTitle();
            }

            public void put(RegionDeptViewRowImpl obj, Object value) {
                obj.setTitle((String)value);
            }
        }
        ,
        RegionCode {
            public Object get(RegionDeptViewRowImpl obj) {
                return obj.getRegionCode();
            }

            public void put(RegionDeptViewRowImpl obj, Object value) {
                obj.setRegionCode((Number)value);
            }
        }
        ,
        Id {
            public Object get(RegionDeptViewRowImpl obj) {
                return obj.getId();
            }

            public void put(RegionDeptViewRowImpl obj, Object value) {
                obj.setId((Number)value);
            }
        }
        ,
        State {
            public Object get(RegionDeptViewRowImpl obj) {
                return obj.getState();
            }

            public void put(RegionDeptViewRowImpl obj, Object value) {
                obj.setState((Number)value);
            }
        }
        ,
        Inserted {
            public Object get(RegionDeptViewRowImpl obj) {
                return obj.getInserted();
            }

            public void put(RegionDeptViewRowImpl obj, Object value) {
                obj.setInserted((Date)value);
            }
        }
        ,
        InsertedBy {
            public Object get(RegionDeptViewRowImpl obj) {
                return obj.getInsertedBy();
            }

            public void put(RegionDeptViewRowImpl obj, Object value) {
                obj.setInsertedBy((Number)value);
            }
        }
        ,
        Updated {
            public Object get(RegionDeptViewRowImpl obj) {
                return obj.getUpdated();
            }

            public void put(RegionDeptViewRowImpl obj, Object value) {
                obj.setUpdated((Date)value);
            }
        }
        ,
        UpdatedBy {
            public Object get(RegionDeptViewRowImpl obj) {
                return obj.getUpdatedBy();
            }

            public void put(RegionDeptViewRowImpl obj, Object value) {
                obj.setUpdatedBy((Number)value);
            }
        }
        ,
        UpdatedFlag {
            public Object get(RegionDeptViewRowImpl obj) {
                return obj.getUpdatedFlag();
            }

            public void put(RegionDeptViewRowImpl obj, Object value) {
                obj.setUpdatedFlag((Number)value);
            }
        }
        ,
        TownVillageView {
            public Object get(RegionDeptViewRowImpl obj) {
                return obj.getTownVillageView();
            }

            public void put(RegionDeptViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(RegionDeptViewRowImpl object);

        public abstract void put(RegionDeptViewRowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CODE = AttributesEnum.Code.index();
    public static final int TITLE = AttributesEnum.Title.index();
    public static final int REGIONCODE = AttributesEnum.RegionCode.index();
    public static final int ID = AttributesEnum.Id.index();
    public static final int STATE = AttributesEnum.State.index();
    public static final int INSERTED = AttributesEnum.Inserted.index();
    public static final int INSERTEDBY = AttributesEnum.InsertedBy.index();
    public static final int UPDATED = AttributesEnum.Updated.index();
    public static final int UPDATEDBY = AttributesEnum.UpdatedBy.index();
    public static final int UPDATEDFLAG = AttributesEnum.UpdatedFlag.index();
    public static final int TOWNVILLAGEVIEW = AttributesEnum.TownVillageView.index();

    /**
     * This is the default constructor (do not remove).
     */
    public RegionDeptViewRowImpl() {
    }

    /**
     * Gets RegionDept entity object.
     * @return the RegionDept
     */
    public EntityImpl getRegionDept() {
        return (EntityImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for CODE using the alias name Code.
     * @return the CODE
     */
    public Number getCode() {
        return (Number) getAttributeInternal(CODE);
    }

    /**
     * Sets <code>value</code> as attribute value for CODE using the alias name Code.
     * @param value value to set the CODE
     */
    public void setCode(Number value) {
        setAttributeInternal(CODE, value);
    }

    /**
     * Gets the attribute value for TITLE using the alias name Title.
     * @return the TITLE
     */
    public String getTitle() {
        return (String) getAttributeInternal(TITLE);
    }

    /**
     * Sets <code>value</code> as attribute value for TITLE using the alias name Title.
     * @param value value to set the TITLE
     */
    public void setTitle(String value) {
        setAttributeInternal(TITLE, value);
    }

    /**
     * Gets the attribute value for REGION_CODE using the alias name RegionCode.
     * @return the REGION_CODE
     */
    public Number getRegionCode() {
        return (Number) getAttributeInternal(REGIONCODE);
    }

    /**
     * Sets <code>value</code> as attribute value for REGION_CODE using the alias name RegionCode.
     * @param value value to set the REGION_CODE
     */
    public void setRegionCode(Number value) {
        setAttributeInternal(REGIONCODE, value);
    }

    /**
     * Gets the attribute value for ID using the alias name Id.
     * @return the ID
     */
    public Number getId() {
        return (Number) getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as attribute value for ID using the alias name Id.
     * @param value value to set the ID
     */
    public void setId(Number value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for STATE using the alias name State.
     * @return the STATE
     */
    public Number getState() {
        return (Number) getAttributeInternal(STATE);
    }

    /**
     * Sets <code>value</code> as attribute value for STATE using the alias name State.
     * @param value value to set the STATE
     */
    public void setState(Number value) {
        setAttributeInternal(STATE, value);
    }

    /**
     * Gets the attribute value for INSERTED using the alias name Inserted.
     * @return the INSERTED
     */
    public Date getInserted() {
        return (Date) getAttributeInternal(INSERTED);
    }

    /**
     * Sets <code>value</code> as attribute value for INSERTED using the alias name Inserted.
     * @param value value to set the INSERTED
     */
    public void setInserted(Date value) {
        setAttributeInternal(INSERTED, value);
    }

    /**
     * Gets the attribute value for INSERTED_BY using the alias name InsertedBy.
     * @return the INSERTED_BY
     */
    public Number getInsertedBy() {
        return (Number) getAttributeInternal(INSERTEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for INSERTED_BY using the alias name InsertedBy.
     * @param value value to set the INSERTED_BY
     */
    public void setInsertedBy(Number value) {
        setAttributeInternal(INSERTEDBY, value);
    }

    /**
     * Gets the attribute value for UPDATED using the alias name Updated.
     * @return the UPDATED
     */
    public Date getUpdated() {
        return (Date) getAttributeInternal(UPDATED);
    }

    /**
     * Sets <code>value</code> as attribute value for UPDATED using the alias name Updated.
     * @param value value to set the UPDATED
     */
    public void setUpdated(Date value) {
        setAttributeInternal(UPDATED, value);
    }

    /**
     * Gets the attribute value for UPDATED_BY using the alias name UpdatedBy.
     * @return the UPDATED_BY
     */
    public Number getUpdatedBy() {
        return (Number) getAttributeInternal(UPDATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for UPDATED_BY using the alias name UpdatedBy.
     * @param value value to set the UPDATED_BY
     */
    public void setUpdatedBy(Number value) {
        setAttributeInternal(UPDATEDBY, value);
    }

    /**
     * Gets the attribute value for UPDATED_FLAG using the alias name UpdatedFlag.
     * @return the UPDATED_FLAG
     */
    public Number getUpdatedFlag() {
        return (Number) getAttributeInternal(UPDATEDFLAG);
    }

    /**
     * Sets <code>value</code> as attribute value for UPDATED_FLAG using the alias name UpdatedFlag.
     * @param value value to set the UPDATED_FLAG
     */
    public void setUpdatedFlag(Number value) {
        setAttributeInternal(UPDATEDFLAG, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link TownVillageView.
     */
    public RowIterator getTownVillageView() {
        return (RowIterator)getAttributeInternal(TOWNVILLAGEVIEW);
    }


    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
