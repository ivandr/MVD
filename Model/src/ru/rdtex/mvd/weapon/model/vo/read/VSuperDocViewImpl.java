package ru.rdtex.mvd.weapon.model.vo.read;

import oracle.jbo.ApplicationModule;
import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.server.ViewObjectImpl;

import ru.rdtex.mvd.weapon.model.vo.read.common.VSuperDocView;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Aug 07 11:58:04 MSD 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class VSuperDocViewImpl extends ViewObjectImpl implements VSuperDocView {
    /**
     * This is the default constructor (do not remove).
     */
    public VSuperDocViewImpl() {
    }
    
    public void deleteSelectedRows() {
        ViewObjectImpl vo = this;
        
        //create a second row set to not impact the row set
        //used in ADF
        RowSet duplicateRowSet = vo.createRowSet("duplicateRowSet");
        //set rowset to first row to avoid "attempt to access
        //dead row" exception
        duplicateRowSet.first();
        //get the current row of the table to set it back after
        //re-executing the VO
        Row currentRow = vo.getCurrentRow();
        boolean currentRowDeleted = false;
        //get all rows that have the transoent attribute
        //"MarkForDelete" set to true
        Row[] rowsToDelete =
            duplicateRowSet.getFilteredRows("DeleteRow", true);
        
        /*Row r = duplicateRowSet.first();
        System.out.println("DeleteRow = " + r.getAttribute("DeleteRow")); 
        //System.out.println("row = " + r.getAttribute("test")); 
        while(duplicateRowSet.hasNext()) {
            r = duplicateRowSet.next();
            System.out.println("DeleteRow = " + r.getAttribute("DeleteRow")); 
            //System.out.println("row = " + r.getAttribute("test")); 
        }*/
        
        ApplicationModule ap = getApplicationModule();
        ViewObjectImpl voDR = (ViewObjectImpl)ap.findViewObject("DocDocumentsView4");
        ViewObjectImpl voR = (ViewObjectImpl)ap.findViewObject("DocRequestsView3");
        if (rowsToDelete.length > 0) {
            //only run throizgh this code if there is something to
            //delete
            for (Row rw : rowsToDelete) {
                //if row is ts marked as the current in VO, set
                //boolean flag
                if (rw.getKey().equals(currentRow.getKey())) {
                    currentRowDeleted = true;
                }
                //remove row - don't yet commit
                rw.remove();
            }
            //re-execute VO
            vo.executeQuery();
            //reset current row if it hasn't been deleted
            if (!currentRowDeleted) {
                vo.setCurrentRow(currentRow);
            }
            
            //duplicateRowSet.closeRowSet();
        }
        duplicateRowSet.closeRowSet();
    }

    /**
     * Returns the bind variable value for fdoc.
     * @return bind variable value for fdoc
     */
    public String getfdoc() {
        return (String)getNamedWhereClauseParam("fdoc");
    }

    /**
     * Sets <code>value</code> for bind variable fdoc.
     * @param value value to bind as fdoc
     */
    public void setfdoc(String value) {
        setNamedWhereClauseParam("fdoc", value);
    }
}
