package ru.rdtex.mvd.weapon.model.en;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Aug 16 12:21:44 MSD 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class DocRelationsImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Id {
            public Object get(DocRelationsImpl obj) {
                return obj.getId();
            }

            public void put(DocRelationsImpl obj, Object value) {
                obj.setId((Number)value);
            }
        }
        ,
        EpId {
            public Object get(DocRelationsImpl obj) {
                return obj.getEpId();
            }

            public void put(DocRelationsImpl obj, Object value) {
                obj.setEpId((Number)value);
            }
        }
        ,
        GunId {
            public Object get(DocRelationsImpl obj) {
                return obj.getGunId();
            }

            public void put(DocRelationsImpl obj, Object value) {
                obj.setGunId((Number)value);
            }
        }
        ,
        State {
            public Object get(DocRelationsImpl obj) {
                return obj.getState();
            }

            public void put(DocRelationsImpl obj, Object value) {
                obj.setState((Number)value);
            }
        }
        ,
        Inserted {
            public Object get(DocRelationsImpl obj) {
                return obj.getInserted();
            }

            public void put(DocRelationsImpl obj, Object value) {
                obj.setInserted((Date)value);
            }
        }
        ,
        InsertedBy {
            public Object get(DocRelationsImpl obj) {
                return obj.getInsertedBy();
            }

            public void put(DocRelationsImpl obj, Object value) {
                obj.setInsertedBy((Number)value);
            }
        }
        ,
        Updated {
            public Object get(DocRelationsImpl obj) {
                return obj.getUpdated();
            }

            public void put(DocRelationsImpl obj, Object value) {
                obj.setUpdated((Date)value);
            }
        }
        ,
        UpdatedBy {
            public Object get(DocRelationsImpl obj) {
                return obj.getUpdatedBy();
            }

            public void put(DocRelationsImpl obj, Object value) {
                obj.setUpdatedBy((Number)value);
            }
        }
        ,
        Owner {
            public Object get(DocRelationsImpl obj) {
                return obj.getOwner();
            }

            public void put(DocRelationsImpl obj, Object value) {
                obj.setOwner((Number)value);
            }
        }
        ,
        BeginDate {
            public Object get(DocRelationsImpl obj) {
                return obj.getBeginDate();
            }

            public void put(DocRelationsImpl obj, Object value) {
                obj.setBeginDate((Date)value);
            }
        }
        ,
        EndDate {
            public Object get(DocRelationsImpl obj) {
                return obj.getEndDate();
            }

            public void put(DocRelationsImpl obj, Object value) {
                obj.setEndDate((Date)value);
            }
        }
        ,
        Comments {
            public Object get(DocRelationsImpl obj) {
                return obj.getComments();
            }

            public void put(DocRelationsImpl obj, Object value) {
                obj.setComments((String)value);
            }
        }
        ,
        NewOwner {
            public Object get(DocRelationsImpl obj) {
                return obj.getNewOwner();
            }

            public void put(DocRelationsImpl obj, Object value) {
                obj.setNewOwner((String)value);
            }
        }
        ,
        UpdatedFlag {
            public Object get(DocRelationsImpl obj) {
                return obj.getUpdatedFlag();
            }

            public void put(DocRelationsImpl obj, Object value) {
                obj.setUpdatedFlag((Number)value);
            }
        }
        ,
        Wh {
            public Object get(DocRelationsImpl obj) {
                return obj.getWh();
            }

            public void put(DocRelationsImpl obj, Object value) {
                obj.setWh((String)value);
            }
        }
        ,
        ObjId {
            public Object get(DocRelationsImpl obj) {
                return obj.getObjId();
            }

            public void put(DocRelationsImpl obj, Object value) {
                obj.setObjId((Number)value);
            }
        }
        ,
        GunGuns {
            public Object get(DocRelationsImpl obj) {
                return obj.getGunGuns();
            }

            public void put(DocRelationsImpl obj, Object value) {
                obj.setGunGuns((EntityImpl)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(DocRelationsImpl object);

        public abstract void put(DocRelationsImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ID = AttributesEnum.Id.index();
    public static final int EPID = AttributesEnum.EpId.index();
    public static final int GUNID = AttributesEnum.GunId.index();
    public static final int STATE = AttributesEnum.State.index();
    public static final int INSERTED = AttributesEnum.Inserted.index();
    public static final int INSERTEDBY = AttributesEnum.InsertedBy.index();
    public static final int UPDATED = AttributesEnum.Updated.index();
    public static final int UPDATEDBY = AttributesEnum.UpdatedBy.index();
    public static final int OWNER = AttributesEnum.Owner.index();
    public static final int BEGINDATE = AttributesEnum.BeginDate.index();
    public static final int ENDDATE = AttributesEnum.EndDate.index();
    public static final int COMMENTS = AttributesEnum.Comments.index();
    public static final int NEWOWNER = AttributesEnum.NewOwner.index();
    public static final int UPDATEDFLAG = AttributesEnum.UpdatedFlag.index();
    public static final int WH = AttributesEnum.Wh.index();
    public static final int OBJID = AttributesEnum.ObjId.index();
    public static final int GUNGUNS = AttributesEnum.GunGuns.index();

    /**
     * This is the default constructor (do not remove).
     */
    public DocRelationsImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("ru.rdtex.mvd.weapon.model.en.DocRelations");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for Id, using the alias name Id.
     * @return the Id
     */
    public Number getId() {
        return (Number)getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Id.
     * @param value value to set the Id
     */
    public void setId(Number value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for EpId, using the alias name EpId.
     * @return the EpId
     */
    public Number getEpId() {
        return (Number)getAttributeInternal(EPID);
    }

    /**
     * Sets <code>value</code> as the attribute value for EpId.
     * @param value value to set the EpId
     */
    public void setEpId(Number value) {
        setAttributeInternal(EPID, value);
    }

    /**
     * Gets the attribute value for GunId, using the alias name GunId.
     * @return the GunId
     */
    public Number getGunId() {
        return (Number)getAttributeInternal(GUNID);
    }

    /**
     * Sets <code>value</code> as the attribute value for GunId.
     * @param value value to set the GunId
     */
    public void setGunId(Number value) {
        setAttributeInternal(GUNID, value);
    }

    /**
     * Gets the attribute value for State, using the alias name State.
     * @return the State
     */
    public Number getState() {
        return (Number)getAttributeInternal(STATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for State.
     * @param value value to set the State
     */
    public void setState(Number value) {
        setAttributeInternal(STATE, value);
    }

    /**
     * Gets the attribute value for Inserted, using the alias name Inserted.
     * @return the Inserted
     */
    public Date getInserted() {
        return (Date)getAttributeInternal(INSERTED);
    }

    /**
     * Sets <code>value</code> as the attribute value for Inserted.
     * @param value value to set the Inserted
     */
    public void setInserted(Date value) {
        setAttributeInternal(INSERTED, value);
    }

    /**
     * Gets the attribute value for InsertedBy, using the alias name InsertedBy.
     * @return the InsertedBy
     */
    public Number getInsertedBy() {
        return (Number)getAttributeInternal(INSERTEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for InsertedBy.
     * @param value value to set the InsertedBy
     */
    public void setInsertedBy(Number value) {
        setAttributeInternal(INSERTEDBY, value);
    }

    /**
     * Gets the attribute value for Updated, using the alias name Updated.
     * @return the Updated
     */
    public Date getUpdated() {
        return (Date)getAttributeInternal(UPDATED);
    }

    /**
     * Sets <code>value</code> as the attribute value for Updated.
     * @param value value to set the Updated
     */
    public void setUpdated(Date value) {
        setAttributeInternal(UPDATED, value);
    }

    /**
     * Gets the attribute value for UpdatedBy, using the alias name UpdatedBy.
     * @return the UpdatedBy
     */
    public Number getUpdatedBy() {
        return (Number)getAttributeInternal(UPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for UpdatedBy.
     * @param value value to set the UpdatedBy
     */
    public void setUpdatedBy(Number value) {
        setAttributeInternal(UPDATEDBY, value);
    }

    /**
     * Gets the attribute value for Owner, using the alias name Owner.
     * @return the Owner
     */
    public Number getOwner() {
        return (Number)getAttributeInternal(OWNER);
    }

    /**
     * Sets <code>value</code> as the attribute value for Owner.
     * @param value value to set the Owner
     */
    public void setOwner(Number value) {
        setAttributeInternal(OWNER, value);
    }

    /**
     * Gets the attribute value for BeginDate, using the alias name BeginDate.
     * @return the BeginDate
     */
    public Date getBeginDate() {
        return (Date)getAttributeInternal(BEGINDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for BeginDate.
     * @param value value to set the BeginDate
     */
    public void setBeginDate(Date value) {
        setAttributeInternal(BEGINDATE, value);
    }

    /**
     * Gets the attribute value for EndDate, using the alias name EndDate.
     * @return the EndDate
     */
    public Date getEndDate() {
        return (Date)getAttributeInternal(ENDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for EndDate.
     * @param value value to set the EndDate
     */
    public void setEndDate(Date value) {
        setAttributeInternal(ENDDATE, value);
    }

    /**
     * Gets the attribute value for Comments, using the alias name Comments.
     * @return the Comments
     */
    public String getComments() {
        return (String)getAttributeInternal(COMMENTS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Comments.
     * @param value value to set the Comments
     */
    public void setComments(String value) {
        setAttributeInternal(COMMENTS, value);
    }

    /**
     * Gets the attribute value for NewOwner, using the alias name NewOwner.
     * @return the NewOwner
     */
    public String getNewOwner() {
        return (String)getAttributeInternal(NEWOWNER);
    }

    /**
     * Sets <code>value</code> as the attribute value for NewOwner.
     * @param value value to set the NewOwner
     */
    public void setNewOwner(String value) {
        setAttributeInternal(NEWOWNER, value);
    }

    /**
     * Gets the attribute value for UpdatedFlag, using the alias name UpdatedFlag.
     * @return the UpdatedFlag
     */
    public Number getUpdatedFlag() {
        return (Number)getAttributeInternal(UPDATEDFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for UpdatedFlag.
     * @param value value to set the UpdatedFlag
     */
    public void setUpdatedFlag(Number value) {
        setAttributeInternal(UPDATEDFLAG, value);
    }

    /**
     * Gets the attribute value for Wh, using the alias name Wh.
     * @return the Wh
     */
    public String getWh() {
        return (String)getAttributeInternal(WH);
    }

    /**
     * Sets <code>value</code> as the attribute value for Wh.
     * @param value value to set the Wh
     */
    public void setWh(String value) {
        setAttributeInternal(WH, value);
    }

    /**
     * Gets the attribute value for ObjId, using the alias name ObjId.
     * @return the ObjId
     */
    public Number getObjId() {
        return (Number)getAttributeInternal(OBJID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ObjId.
     * @param value value to set the ObjId
     */
    public void setObjId(Number value) {
        setAttributeInternal(OBJID, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getGunGuns() {
        return (EntityImpl)getAttributeInternal(GUNGUNS);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setGunGuns(EntityImpl value) {
        setAttributeInternal(GUNGUNS, value);
    }


    /**
     * @param id key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number id) {
        return new Key(new Object[]{id});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        SequenceImpl seq = new SequenceImpl("DOC_SEQ", getDBTransaction());
        setId(seq.getSequenceNumber());
    }
}
