package ru.rdtex.mvd.weapon.model.en;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Aug 15 11:38:09 MSD 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class DocPermissionsImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        BlnkId {
            public Object get(DocPermissionsImpl obj) {
                return obj.getBlnkId();
            }

            public void put(DocPermissionsImpl obj, Object value) {
                obj.setBlnkId((Number)value);
            }
        }
        ,
        CountryCodeIn {
            public Object get(DocPermissionsImpl obj) {
                return obj.getCountryCodeIn();
            }

            public void put(DocPermissionsImpl obj, Object value) {
                obj.setCountryCodeIn((Number)value);
            }
        }
        ,
        CountryCodeOut {
            public Object get(DocPermissionsImpl obj) {
                return obj.getCountryCodeOut();
            }

            public void put(DocPermissionsImpl obj, Object value) {
                obj.setCountryCodeOut((Number)value);
            }
        }
        ,
        DdcId {
            public Object get(DocPermissionsImpl obj) {
                return obj.getDdcId();
            }

            public void put(DocPermissionsImpl obj, Object value) {
                obj.setDdcId((Number)value);
            }
        }
        ,
        EndDate {
            public Object get(DocPermissionsImpl obj) {
                return obj.getEndDate();
            }

            public void put(DocPermissionsImpl obj, Object value) {
                obj.setEndDate((Date)value);
            }
        }
        ,
        Reason {
            public Object get(DocPermissionsImpl obj) {
                return obj.getReason();
            }

            public void put(DocPermissionsImpl obj, Object value) {
                obj.setReason((String)value);
            }
        }
        ,
        Duplicate {
            public Object get(DocPermissionsImpl obj) {
                return obj.getDuplicate();
            }

            public void put(DocPermissionsImpl obj, Object value) {
                obj.setDuplicate((Number)value);
            }
        }
        ,
        DuplicatePers {
            public Object get(DocPermissionsImpl obj) {
                return obj.getDuplicatePers();
            }

            public void put(DocPermissionsImpl obj, Object value) {
                obj.setDuplicatePers((Number)value);
            }
        }
        ,
        SaleDate {
            public Object get(DocPermissionsImpl obj) {
                return obj.getSaleDate();
            }

            public void put(DocPermissionsImpl obj, Object value) {
                obj.setSaleDate((Date)value);
            }
        }
        ,
        Shop {
            public Object get(DocPermissionsImpl obj) {
                return obj.getShop();
            }

            public void put(DocPermissionsImpl obj, Object value) {
                obj.setShop((String)value);
            }
        }
        ,
        TypelicId {
            public Object get(DocPermissionsImpl obj) {
                return obj.getTypelicId();
            }

            public void put(DocPermissionsImpl obj, Object value) {
                obj.setTypelicId((Number)value);
            }
        }
        ,
        UpdatedFlag {
            public Object get(DocPermissionsImpl obj) {
                return obj.getUpdatedFlag();
            }

            public void put(DocPermissionsImpl obj, Object value) {
                obj.setUpdatedFlag((Number)value);
            }
        }
        ,
        EndDateDirect {
            public Object get(DocPermissionsImpl obj) {
                return obj.getEndDateDirect();
            }

            public void put(DocPermissionsImpl obj, Object value) {
                obj.setEndDateDirect((Date)value);
            }
        }
        ,
        RemoveDate {
            public Object get(DocPermissionsImpl obj) {
                return obj.getRemoveDate();
            }

            public void put(DocPermissionsImpl obj, Object value) {
                obj.setRemoveDate((Date)value);
            }
        }
        ,
        ImportDate {
            public Object get(DocPermissionsImpl obj) {
                return obj.getImportDate();
            }

            public void put(DocPermissionsImpl obj, Object value) {
                obj.setImportDate((Date)value);
            }
        }
        ,
        ObjId {
            public Object get(DocPermissionsImpl obj) {
                return obj.getObjId();
            }

            public void put(DocPermissionsImpl obj, Object value) {
                obj.setObjId((Number)value);
            }
        }
        ,
        Path {
            public Object get(DocPermissionsImpl obj) {
                return obj.getPath();
            }

            public void put(DocPermissionsImpl obj, Object value) {
                obj.setPath((String)value);
            }
        }
        ,
        CustOut {
            public Object get(DocPermissionsImpl obj) {
                return obj.getCustOut();
            }

            public void put(DocPermissionsImpl obj, Object value) {
                obj.setCustOut((Number)value);
            }
        }
        ,
        Transport {
            public Object get(DocPermissionsImpl obj) {
                return obj.getTransport();
            }

            public void put(DocPermissionsImpl obj, Object value) {
                obj.setTransport((String)value);
            }
        }
        ,
        CustIn {
            public Object get(DocPermissionsImpl obj) {
                return obj.getCustIn();
            }

            public void put(DocPermissionsImpl obj, Object value) {
                obj.setCustIn((Number)value);
            }
        }
        ,
        Department {
            public Object get(DocPermissionsImpl obj) {
                return obj.getDepartment();
            }

            public void put(DocPermissionsImpl obj, Object value) {
                obj.setDepartment((String)value);
            }
        }
        ,
        HeadSign {
            public Object get(DocPermissionsImpl obj) {
                return obj.getHeadSign();
            }

            public void put(DocPermissionsImpl obj, Object value) {
                obj.setHeadSign((String)value);
            }
        }
        ,
        EmpSign {
            public Object get(DocPermissionsImpl obj) {
                return obj.getEmpSign();
            }

            public void put(DocPermissionsImpl obj, Object value) {
                obj.setEmpSign((String)value);
            }
        }
        ,
        StatusDate {
            public Object get(DocPermissionsImpl obj) {
                return obj.getStatusDate();
            }

            public void put(DocPermissionsImpl obj, Object value) {
                obj.setStatusDate((Date)value);
            }
        }
        ,
        ResponPerson {
            public Object get(DocPermissionsImpl obj) {
                return obj.getResponPerson();
            }

            public void put(DocPermissionsImpl obj, Object value) {
                obj.setResponPerson((String)value);
            }
        }
        ,
        LicstatCode {
            public Object get(DocPermissionsImpl obj) {
                return obj.getLicstatCode();
            }

            public void put(DocPermissionsImpl obj, Object value) {
                obj.setLicstatCode((Number)value);
            }
        }
        ,
        Id {
            public Object get(DocPermissionsImpl obj) {
                return obj.getId();
            }

            public void put(DocPermissionsImpl obj, Object value) {
                obj.setId((Number)value);
            }
        }
        ,
        State {
            public Object get(DocPermissionsImpl obj) {
                return obj.getState();
            }

            public void put(DocPermissionsImpl obj, Object value) {
                obj.setState((Number)value);
            }
        }
        ,
        Inserted {
            public Object get(DocPermissionsImpl obj) {
                return obj.getInserted();
            }

            public void put(DocPermissionsImpl obj, Object value) {
                obj.setInserted((Date)value);
            }
        }
        ,
        InsertedBy {
            public Object get(DocPermissionsImpl obj) {
                return obj.getInsertedBy();
            }

            public void put(DocPermissionsImpl obj, Object value) {
                obj.setInsertedBy((Number)value);
            }
        }
        ,
        Updated {
            public Object get(DocPermissionsImpl obj) {
                return obj.getUpdated();
            }

            public void put(DocPermissionsImpl obj, Object value) {
                obj.setUpdated((Date)value);
            }
        }
        ,
        UpdatedBy {
            public Object get(DocPermissionsImpl obj) {
                return obj.getUpdatedBy();
            }

            public void put(DocPermissionsImpl obj, Object value) {
                obj.setUpdatedBy((Number)value);
            }
        }
        ,
        PaySum {
            public Object get(DocPermissionsImpl obj) {
                return obj.getPaySum();
            }

            public void put(DocPermissionsImpl obj, Object value) {
                obj.setPaySum((Number)value);
            }
        }
        ,
        EpFId {
            public Object get(DocPermissionsImpl obj) {
                return obj.getEpFId();
            }

            public void put(DocPermissionsImpl obj, Object value) {
                obj.setEpFId((Number)value);
            }
        }
        ,
        ObjLow {
            public Object get(DocPermissionsImpl obj) {
                return obj.getObjLow();
            }

            public void put(DocPermissionsImpl obj, Object value) {
                obj.setObjLow((String)value);
            }
        }
        ,
        Wh {
            public Object get(DocPermissionsImpl obj) {
                return obj.getWh();
            }

            public void put(DocPermissionsImpl obj, Object value) {
                obj.setWh((String)value);
            }
        }
        ,
        EadrId {
            public Object get(DocPermissionsImpl obj) {
                return obj.getEadrId();
            }

            public void put(DocPermissionsImpl obj, Object value) {
                obj.setEadrId((Number)value);
            }
        }
        ,
        RegionCode {
            public Object get(DocPermissionsImpl obj) {
                return obj.getRegionCode();
            }

            public void put(DocPermissionsImpl obj, Object value) {
                obj.setRegionCode((Number)value);
            }
        }
        ,
        Ovd {
            public Object get(DocPermissionsImpl obj) {
                return obj.getOvd();
            }

            public void put(DocPermissionsImpl obj, Object value) {
                obj.setOvd((String)value);
            }
        }
        ,
        RegionDept {
            public Object get(DocPermissionsImpl obj) {
                return obj.getRegionDept();
            }

            public void put(DocPermissionsImpl obj, Object value) {
                obj.setRegionDept((String)value);
            }
        }
        ,
        MunDistrict {
            public Object get(DocPermissionsImpl obj) {
                return obj.getMunDistrict();
            }

            public void put(DocPermissionsImpl obj, Object value) {
                obj.setMunDistrict((String)value);
            }
        }
        ,
        Town {
            public Object get(DocPermissionsImpl obj) {
                return obj.getTown();
            }

            public void put(DocPermissionsImpl obj, Object value) {
                obj.setTown((String)value);
            }
        }
        ,
        PayDate {
            public Object get(DocPermissionsImpl obj) {
                return obj.getPayDate();
            }

            public void put(DocPermissionsImpl obj, Object value) {
                obj.setPayDate((Date)value);
            }
        }
        ,
        DetectiveNumb {
            public Object get(DocPermissionsImpl obj) {
                return obj.getDetectiveNumb();
            }

            public void put(DocPermissionsImpl obj, Object value) {
                obj.setDetectiveNumb((String)value);
            }
        }
        ,
        HashValue {
            public Object get(DocPermissionsImpl obj) {
                return obj.getHashValue();
            }

            public void put(DocPermissionsImpl obj, Object value) {
                obj.setHashValue((Number)value);
            }
        }
        ,
        PsgCancelReason {
            public Object get(DocPermissionsImpl obj) {
                return obj.getPsgCancelReason();
            }

            public void put(DocPermissionsImpl obj, Object value) {
                obj.setPsgCancelReason((String)value);
            }
        }
        ,
        PsgLossDescr {
            public Object get(DocPermissionsImpl obj) {
                return obj.getPsgLossDescr();
            }

            public void put(DocPermissionsImpl obj, Object value) {
                obj.setPsgLossDescr((String)value);
            }
        }
        ,
        DocDocuments {
            public Object get(DocPermissionsImpl obj) {
                return obj.getDocDocuments();
            }

            public void put(DocPermissionsImpl obj, Object value) {
                obj.setDocDocuments((DocDocumentsImpl)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(DocPermissionsImpl object);

        public abstract void put(DocPermissionsImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int BLNKID = AttributesEnum.BlnkId.index();
    public static final int COUNTRYCODEIN = AttributesEnum.CountryCodeIn.index();
    public static final int COUNTRYCODEOUT = AttributesEnum.CountryCodeOut.index();
    public static final int DDCID = AttributesEnum.DdcId.index();
    public static final int ENDDATE = AttributesEnum.EndDate.index();
    public static final int REASON = AttributesEnum.Reason.index();
    public static final int DUPLICATE = AttributesEnum.Duplicate.index();
    public static final int DUPLICATEPERS = AttributesEnum.DuplicatePers.index();
    public static final int SALEDATE = AttributesEnum.SaleDate.index();
    public static final int SHOP = AttributesEnum.Shop.index();
    public static final int TYPELICID = AttributesEnum.TypelicId.index();
    public static final int UPDATEDFLAG = AttributesEnum.UpdatedFlag.index();
    public static final int ENDDATEDIRECT = AttributesEnum.EndDateDirect.index();
    public static final int REMOVEDATE = AttributesEnum.RemoveDate.index();
    public static final int IMPORTDATE = AttributesEnum.ImportDate.index();
    public static final int OBJID = AttributesEnum.ObjId.index();
    public static final int PATH = AttributesEnum.Path.index();
    public static final int CUSTOUT = AttributesEnum.CustOut.index();
    public static final int TRANSPORT = AttributesEnum.Transport.index();
    public static final int CUSTIN = AttributesEnum.CustIn.index();
    public static final int DEPARTMENT = AttributesEnum.Department.index();
    public static final int HEADSIGN = AttributesEnum.HeadSign.index();
    public static final int EMPSIGN = AttributesEnum.EmpSign.index();
    public static final int STATUSDATE = AttributesEnum.StatusDate.index();
    public static final int RESPONPERSON = AttributesEnum.ResponPerson.index();
    public static final int LICSTATCODE = AttributesEnum.LicstatCode.index();
    public static final int ID = AttributesEnum.Id.index();
    public static final int STATE = AttributesEnum.State.index();
    public static final int INSERTED = AttributesEnum.Inserted.index();
    public static final int INSERTEDBY = AttributesEnum.InsertedBy.index();
    public static final int UPDATED = AttributesEnum.Updated.index();
    public static final int UPDATEDBY = AttributesEnum.UpdatedBy.index();
    public static final int PAYSUM = AttributesEnum.PaySum.index();
    public static final int EPFID = AttributesEnum.EpFId.index();
    public static final int OBJLOW = AttributesEnum.ObjLow.index();
    public static final int WH = AttributesEnum.Wh.index();
    public static final int EADRID = AttributesEnum.EadrId.index();
    public static final int REGIONCODE = AttributesEnum.RegionCode.index();
    public static final int OVD = AttributesEnum.Ovd.index();
    public static final int REGIONDEPT = AttributesEnum.RegionDept.index();
    public static final int MUNDISTRICT = AttributesEnum.MunDistrict.index();
    public static final int TOWN = AttributesEnum.Town.index();
    public static final int PAYDATE = AttributesEnum.PayDate.index();
    public static final int DETECTIVENUMB = AttributesEnum.DetectiveNumb.index();
    public static final int HASHVALUE = AttributesEnum.HashValue.index();
    public static final int PSGCANCELREASON = AttributesEnum.PsgCancelReason.index();
    public static final int PSGLOSSDESCR = AttributesEnum.PsgLossDescr.index();
    public static final int DOCDOCUMENTS = AttributesEnum.DocDocuments.index();

    /**
     * This is the default constructor (do not remove).
     */
    public DocPermissionsImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("ru.rdtex.mvd.weapon.model.en.DocPermissions");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for BlnkId, using the alias name BlnkId.
     * @return the BlnkId
     */
    public Number getBlnkId() {
        return (Number)getAttributeInternal(BLNKID);
    }

    /**
     * Sets <code>value</code> as the attribute value for BlnkId.
     * @param value value to set the BlnkId
     */
    public void setBlnkId(Number value) {
        setAttributeInternal(BLNKID, value);
    }

    /**
     * Gets the attribute value for CountryCodeIn, using the alias name CountryCodeIn.
     * @return the CountryCodeIn
     */
    public Number getCountryCodeIn() {
        return (Number)getAttributeInternal(COUNTRYCODEIN);
    }

    /**
     * Sets <code>value</code> as the attribute value for CountryCodeIn.
     * @param value value to set the CountryCodeIn
     */
    public void setCountryCodeIn(Number value) {
        setAttributeInternal(COUNTRYCODEIN, value);
    }

    /**
     * Gets the attribute value for CountryCodeOut, using the alias name CountryCodeOut.
     * @return the CountryCodeOut
     */
    public Number getCountryCodeOut() {
        return (Number)getAttributeInternal(COUNTRYCODEOUT);
    }

    /**
     * Sets <code>value</code> as the attribute value for CountryCodeOut.
     * @param value value to set the CountryCodeOut
     */
    public void setCountryCodeOut(Number value) {
        setAttributeInternal(COUNTRYCODEOUT, value);
    }

    /**
     * Gets the attribute value for DdcId, using the alias name DdcId.
     * @return the DdcId
     */
    public Number getDdcId() {
        return (Number)getAttributeInternal(DDCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DdcId.
     * @param value value to set the DdcId
     */
    public void setDdcId(Number value) {
        setAttributeInternal(DDCID, value);
    }

    /**
     * Gets the attribute value for EndDate, using the alias name EndDate.
     * @return the EndDate
     */
    public Date getEndDate() {
        return (Date)getAttributeInternal(ENDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for EndDate.
     * @param value value to set the EndDate
     */
    public void setEndDate(Date value) {
        setAttributeInternal(ENDDATE, value);
    }

    /**
     * Gets the attribute value for Reason, using the alias name Reason.
     * @return the Reason
     */
    public String getReason() {
        return (String)getAttributeInternal(REASON);
    }

    /**
     * Sets <code>value</code> as the attribute value for Reason.
     * @param value value to set the Reason
     */
    public void setReason(String value) {
        setAttributeInternal(REASON, value);
    }

    /**
     * Gets the attribute value for Duplicate, using the alias name Duplicate.
     * @return the Duplicate
     */
    public Number getDuplicate() {
        return (Number)getAttributeInternal(DUPLICATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Duplicate.
     * @param value value to set the Duplicate
     */
    public void setDuplicate(Number value) {
        setAttributeInternal(DUPLICATE, value);
    }

    /**
     * Gets the attribute value for DuplicatePers, using the alias name DuplicatePers.
     * @return the DuplicatePers
     */
    public Number getDuplicatePers() {
        return (Number)getAttributeInternal(DUPLICATEPERS);
    }

    /**
     * Sets <code>value</code> as the attribute value for DuplicatePers.
     * @param value value to set the DuplicatePers
     */
    public void setDuplicatePers(Number value) {
        setAttributeInternal(DUPLICATEPERS, value);
    }

    /**
     * Gets the attribute value for SaleDate, using the alias name SaleDate.
     * @return the SaleDate
     */
    public Date getSaleDate() {
        return (Date)getAttributeInternal(SALEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for SaleDate.
     * @param value value to set the SaleDate
     */
    public void setSaleDate(Date value) {
        setAttributeInternal(SALEDATE, value);
    }

    /**
     * Gets the attribute value for Shop, using the alias name Shop.
     * @return the Shop
     */
    public String getShop() {
        return (String)getAttributeInternal(SHOP);
    }

    /**
     * Sets <code>value</code> as the attribute value for Shop.
     * @param value value to set the Shop
     */
    public void setShop(String value) {
        setAttributeInternal(SHOP, value);
    }

    /**
     * Gets the attribute value for TypelicId, using the alias name TypelicId.
     * @return the TypelicId
     */
    public Number getTypelicId() {
        return (Number)getAttributeInternal(TYPELICID);
    }

    /**
     * Sets <code>value</code> as the attribute value for TypelicId.
     * @param value value to set the TypelicId
     */
    public void setTypelicId(Number value) {
        setAttributeInternal(TYPELICID, value);
    }

    /**
     * Gets the attribute value for UpdatedFlag, using the alias name UpdatedFlag.
     * @return the UpdatedFlag
     */
    public Number getUpdatedFlag() {
        return (Number)getAttributeInternal(UPDATEDFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for UpdatedFlag.
     * @param value value to set the UpdatedFlag
     */
    public void setUpdatedFlag(Number value) {
        setAttributeInternal(UPDATEDFLAG, value);
    }

    /**
     * Gets the attribute value for EndDateDirect, using the alias name EndDateDirect.
     * @return the EndDateDirect
     */
    public Date getEndDateDirect() {
        return (Date)getAttributeInternal(ENDDATEDIRECT);
    }

    /**
     * Sets <code>value</code> as the attribute value for EndDateDirect.
     * @param value value to set the EndDateDirect
     */
    public void setEndDateDirect(Date value) {
        setAttributeInternal(ENDDATEDIRECT, value);
    }

    /**
     * Gets the attribute value for RemoveDate, using the alias name RemoveDate.
     * @return the RemoveDate
     */
    public Date getRemoveDate() {
        return (Date)getAttributeInternal(REMOVEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for RemoveDate.
     * @param value value to set the RemoveDate
     */
    public void setRemoveDate(Date value) {
        setAttributeInternal(REMOVEDATE, value);
    }

    /**
     * Gets the attribute value for ImportDate, using the alias name ImportDate.
     * @return the ImportDate
     */
    public Date getImportDate() {
        return (Date)getAttributeInternal(IMPORTDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ImportDate.
     * @param value value to set the ImportDate
     */
    public void setImportDate(Date value) {
        setAttributeInternal(IMPORTDATE, value);
    }

    /**
     * Gets the attribute value for ObjId, using the alias name ObjId.
     * @return the ObjId
     */
    public Number getObjId() {
        return (Number)getAttributeInternal(OBJID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ObjId.
     * @param value value to set the ObjId
     */
    public void setObjId(Number value) {
        setAttributeInternal(OBJID, value);
    }

    /**
     * Gets the attribute value for Path, using the alias name Path.
     * @return the Path
     */
    public String getPath() {
        return (String)getAttributeInternal(PATH);
    }

    /**
     * Sets <code>value</code> as the attribute value for Path.
     * @param value value to set the Path
     */
    public void setPath(String value) {
        setAttributeInternal(PATH, value);
    }

    /**
     * Gets the attribute value for CustOut, using the alias name CustOut.
     * @return the CustOut
     */
    public Number getCustOut() {
        return (Number)getAttributeInternal(CUSTOUT);
    }

    /**
     * Sets <code>value</code> as the attribute value for CustOut.
     * @param value value to set the CustOut
     */
    public void setCustOut(Number value) {
        setAttributeInternal(CUSTOUT, value);
    }

    /**
     * Gets the attribute value for Transport, using the alias name Transport.
     * @return the Transport
     */
    public String getTransport() {
        return (String)getAttributeInternal(TRANSPORT);
    }

    /**
     * Sets <code>value</code> as the attribute value for Transport.
     * @param value value to set the Transport
     */
    public void setTransport(String value) {
        setAttributeInternal(TRANSPORT, value);
    }

    /**
     * Gets the attribute value for CustIn, using the alias name CustIn.
     * @return the CustIn
     */
    public Number getCustIn() {
        return (Number)getAttributeInternal(CUSTIN);
    }

    /**
     * Sets <code>value</code> as the attribute value for CustIn.
     * @param value value to set the CustIn
     */
    public void setCustIn(Number value) {
        setAttributeInternal(CUSTIN, value);
    }

    /**
     * Gets the attribute value for Department, using the alias name Department.
     * @return the Department
     */
    public String getDepartment() {
        return (String)getAttributeInternal(DEPARTMENT);
    }

    /**
     * Sets <code>value</code> as the attribute value for Department.
     * @param value value to set the Department
     */
    public void setDepartment(String value) {
        setAttributeInternal(DEPARTMENT, value);
    }

    /**
     * Gets the attribute value for HeadSign, using the alias name HeadSign.
     * @return the HeadSign
     */
    public String getHeadSign() {
        return (String)getAttributeInternal(HEADSIGN);
    }

    /**
     * Sets <code>value</code> as the attribute value for HeadSign.
     * @param value value to set the HeadSign
     */
    public void setHeadSign(String value) {
        setAttributeInternal(HEADSIGN, value);
    }

    /**
     * Gets the attribute value for EmpSign, using the alias name EmpSign.
     * @return the EmpSign
     */
    public String getEmpSign() {
        return (String)getAttributeInternal(EMPSIGN);
    }

    /**
     * Sets <code>value</code> as the attribute value for EmpSign.
     * @param value value to set the EmpSign
     */
    public void setEmpSign(String value) {
        setAttributeInternal(EMPSIGN, value);
    }

    /**
     * Gets the attribute value for StatusDate, using the alias name StatusDate.
     * @return the StatusDate
     */
    public Date getStatusDate() {
        return (Date)getAttributeInternal(STATUSDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for StatusDate.
     * @param value value to set the StatusDate
     */
    public void setStatusDate(Date value) {
        setAttributeInternal(STATUSDATE, value);
    }

    /**
     * Gets the attribute value for ResponPerson, using the alias name ResponPerson.
     * @return the ResponPerson
     */
    public String getResponPerson() {
        return (String)getAttributeInternal(RESPONPERSON);
    }

    /**
     * Sets <code>value</code> as the attribute value for ResponPerson.
     * @param value value to set the ResponPerson
     */
    public void setResponPerson(String value) {
        setAttributeInternal(RESPONPERSON, value);
    }

    /**
     * Gets the attribute value for LicstatCode, using the alias name LicstatCode.
     * @return the LicstatCode
     */
    public Number getLicstatCode() {
        return (Number)getAttributeInternal(LICSTATCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LicstatCode.
     * @param value value to set the LicstatCode
     */
    public void setLicstatCode(Number value) {
        setAttributeInternal(LICSTATCODE, value);
    }

    /**
     * Gets the attribute value for Id, using the alias name Id.
     * @return the Id
     */
    public Number getId() {
        return (Number)getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Id.
     * @param value value to set the Id
     */
    public void setId(Number value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for State, using the alias name State.
     * @return the State
     */
    public Number getState() {
        return (Number)getAttributeInternal(STATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for State.
     * @param value value to set the State
     */
    public void setState(Number value) {
        setAttributeInternal(STATE, value);
    }

    /**
     * Gets the attribute value for Inserted, using the alias name Inserted.
     * @return the Inserted
     */
    public Date getInserted() {
        return (Date)getAttributeInternal(INSERTED);
    }

    /**
     * Sets <code>value</code> as the attribute value for Inserted.
     * @param value value to set the Inserted
     */
    public void setInserted(Date value) {
        setAttributeInternal(INSERTED, value);
    }

    /**
     * Gets the attribute value for InsertedBy, using the alias name InsertedBy.
     * @return the InsertedBy
     */
    public Number getInsertedBy() {
        return (Number)getAttributeInternal(INSERTEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for InsertedBy.
     * @param value value to set the InsertedBy
     */
    public void setInsertedBy(Number value) {
        setAttributeInternal(INSERTEDBY, value);
    }

    /**
     * Gets the attribute value for Updated, using the alias name Updated.
     * @return the Updated
     */
    public Date getUpdated() {
        return (Date)getAttributeInternal(UPDATED);
    }

    /**
     * Sets <code>value</code> as the attribute value for Updated.
     * @param value value to set the Updated
     */
    public void setUpdated(Date value) {
        setAttributeInternal(UPDATED, value);
    }

    /**
     * Gets the attribute value for UpdatedBy, using the alias name UpdatedBy.
     * @return the UpdatedBy
     */
    public Number getUpdatedBy() {
        return (Number)getAttributeInternal(UPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for UpdatedBy.
     * @param value value to set the UpdatedBy
     */
    public void setUpdatedBy(Number value) {
        setAttributeInternal(UPDATEDBY, value);
    }

    /**
     * Gets the attribute value for PaySum, using the alias name PaySum.
     * @return the PaySum
     */
    public Number getPaySum() {
        return (Number)getAttributeInternal(PAYSUM);
    }

    /**
     * Sets <code>value</code> as the attribute value for PaySum.
     * @param value value to set the PaySum
     */
    public void setPaySum(Number value) {
        setAttributeInternal(PAYSUM, value);
    }

    /**
     * Gets the attribute value for EpFId, using the alias name EpFId.
     * @return the EpFId
     */
    public Number getEpFId() {
        return (Number)getAttributeInternal(EPFID);
    }

    /**
     * Sets <code>value</code> as the attribute value for EpFId.
     * @param value value to set the EpFId
     */
    public void setEpFId(Number value) {
        setAttributeInternal(EPFID, value);
    }

    /**
     * Gets the attribute value for ObjLow, using the alias name ObjLow.
     * @return the ObjLow
     */
    public String getObjLow() {
        return (String)getAttributeInternal(OBJLOW);
    }

    /**
     * Sets <code>value</code> as the attribute value for ObjLow.
     * @param value value to set the ObjLow
     */
    public void setObjLow(String value) {
        setAttributeInternal(OBJLOW, value);
    }

    /**
     * Gets the attribute value for Wh, using the alias name Wh.
     * @return the Wh
     */
    public String getWh() {
        return (String)getAttributeInternal(WH);
    }

    /**
     * Sets <code>value</code> as the attribute value for Wh.
     * @param value value to set the Wh
     */
    public void setWh(String value) {
        setAttributeInternal(WH, value);
    }

    /**
     * Gets the attribute value for EadrId, using the alias name EadrId.
     * @return the EadrId
     */
    public Number getEadrId() {
        return (Number)getAttributeInternal(EADRID);
    }

    /**
     * Sets <code>value</code> as the attribute value for EadrId.
     * @param value value to set the EadrId
     */
    public void setEadrId(Number value) {
        setAttributeInternal(EADRID, value);
    }

    /**
     * Gets the attribute value for RegionCode, using the alias name RegionCode.
     * @return the RegionCode
     */
    public Number getRegionCode() {
        return (Number)getAttributeInternal(REGIONCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for RegionCode.
     * @param value value to set the RegionCode
     */
    public void setRegionCode(Number value) {
        setAttributeInternal(REGIONCODE, value);
    }

    /**
     * Gets the attribute value for Ovd, using the alias name Ovd.
     * @return the Ovd
     */
    public String getOvd() {
        return (String)getAttributeInternal(OVD);
    }

    /**
     * Sets <code>value</code> as the attribute value for Ovd.
     * @param value value to set the Ovd
     */
    public void setOvd(String value) {
        setAttributeInternal(OVD, value);
    }

    /**
     * Gets the attribute value for RegionDept, using the alias name RegionDept.
     * @return the RegionDept
     */
    public String getRegionDept() {
        return (String)getAttributeInternal(REGIONDEPT);
    }

    /**
     * Sets <code>value</code> as the attribute value for RegionDept.
     * @param value value to set the RegionDept
     */
    public void setRegionDept(String value) {
        setAttributeInternal(REGIONDEPT, value);
    }

    /**
     * Gets the attribute value for MunDistrict, using the alias name MunDistrict.
     * @return the MunDistrict
     */
    public String getMunDistrict() {
        return (String)getAttributeInternal(MUNDISTRICT);
    }

    /**
     * Sets <code>value</code> as the attribute value for MunDistrict.
     * @param value value to set the MunDistrict
     */
    public void setMunDistrict(String value) {
        setAttributeInternal(MUNDISTRICT, value);
    }

    /**
     * Gets the attribute value for Town, using the alias name Town.
     * @return the Town
     */
    public String getTown() {
        return (String)getAttributeInternal(TOWN);
    }

    /**
     * Sets <code>value</code> as the attribute value for Town.
     * @param value value to set the Town
     */
    public void setTown(String value) {
        setAttributeInternal(TOWN, value);
    }

    /**
     * Gets the attribute value for PayDate, using the alias name PayDate.
     * @return the PayDate
     */
    public Date getPayDate() {
        return (Date)getAttributeInternal(PAYDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for PayDate.
     * @param value value to set the PayDate
     */
    public void setPayDate(Date value) {
        setAttributeInternal(PAYDATE, value);
    }

    /**
     * Gets the attribute value for DetectiveNumb, using the alias name DetectiveNumb.
     * @return the DetectiveNumb
     */
    public String getDetectiveNumb() {
        return (String)getAttributeInternal(DETECTIVENUMB);
    }

    /**
     * Sets <code>value</code> as the attribute value for DetectiveNumb.
     * @param value value to set the DetectiveNumb
     */
    public void setDetectiveNumb(String value) {
        setAttributeInternal(DETECTIVENUMB, value);
    }

    /**
     * Gets the attribute value for HashValue, using the alias name HashValue.
     * @return the HashValue
     */
    public Number getHashValue() {
        return (Number)getAttributeInternal(HASHVALUE);
    }

    /**
     * Sets <code>value</code> as the attribute value for HashValue.
     * @param value value to set the HashValue
     */
    public void setHashValue(Number value) {
        setAttributeInternal(HASHVALUE, value);
    }

    /**
     * Gets the attribute value for PsgCancelReason, using the alias name PsgCancelReason.
     * @return the PsgCancelReason
     */
    public String getPsgCancelReason() {
        return (String)getAttributeInternal(PSGCANCELREASON);
    }

    /**
     * Sets <code>value</code> as the attribute value for PsgCancelReason.
     * @param value value to set the PsgCancelReason
     */
    public void setPsgCancelReason(String value) {
        setAttributeInternal(PSGCANCELREASON, value);
    }

    /**
     * Gets the attribute value for PsgLossDescr, using the alias name PsgLossDescr.
     * @return the PsgLossDescr
     */
    public String getPsgLossDescr() {
        return (String)getAttributeInternal(PSGLOSSDESCR);
    }

    /**
     * Sets <code>value</code> as the attribute value for PsgLossDescr.
     * @param value value to set the PsgLossDescr
     */
    public void setPsgLossDescr(String value) {
        setAttributeInternal(PSGLOSSDESCR, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity DocDocumentsImpl.
     */
    public DocDocumentsImpl getDocDocuments() {
        return (DocDocumentsImpl)getAttributeInternal(DOCDOCUMENTS);
    }

    /**
     * Sets <code>value</code> as the associated entity DocDocumentsImpl.
     */
    public void setDocDocuments(DocDocumentsImpl value) {
        setAttributeInternal(DOCDOCUMENTS, value);
    }


    /**
     * @param id key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number id) {
        return new Key(new Object[]{id});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        SequenceImpl seq = new SequenceImpl("DOC_SEQ", getDBTransaction());
        setId(seq.getSequenceNumber());
    }
}
